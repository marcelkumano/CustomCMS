@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.HomeType>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "MasterTemplate.cshtml";
}



@* the fun starts here *@

<!-- Carousel
================================================== -->
<div id="myCarousel" class="carousel slide" data-ride="carousel">
    @{
        var activeIndicatorIndex = 0;
        var selection = Model.Content.Site().Children("destaqueType")
                            .Where(x => x.IsVisible());
    }
    <!-- Indicators -->
    <ol class="carousel-indicators">
        @for (int indicatorIndex = 0; indicatorIndex < selection.Count(); indicatorIndex++)
        {
            <li data-target="#myCarousel" data-slide-to="@indicatorIndex" class="@(indicatorIndex == activeIndicatorIndex ? "active" : string.Empty)"></li>
        }
    </ol>
    <div class="carousel-inner" role="listbox">
        @for (int destaqueIndex = 0; destaqueIndex < selection.Count(); destaqueIndex++)
        {
            DestaqueType destaqueItem = selection.ToArray()[destaqueIndex] as DestaqueType;

            <div class="item @(destaqueIndex == activeIndicatorIndex ? "active" : string.Empty)"  data-stellar-background-ratio="0.7" style="background-attachment: fixed; background-image: url(@destaqueItem.DestaqueImage.Url)">
                <div class="container">
                    <div class="carousel-caption">
                        <h1>@destaqueItem.TituloDestaque</h1>
                        <p>@destaqueItem.DescricaoDestaque</p>
                        <p><a class="btn btn-md mycms-carousel" href="@destaqueItem.LinkAcaoDestaque" role="button">@destaqueItem.TextoAcaoDestaque</a></p>
                    </div>
                </div>
            </div>

        }
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div><!-- /.carousel -->
<!-- Marketing messaging and featurettes
================================================== -->
<!-- Wrap the rest of the page in another container to center all the content. -->

<div class="container unidades">
    <div class="row">
        @{
            var unidades = Model.Content.Site().FirstChild("unidadesType").Children("unidadeType")
                                .Where(x => x.IsVisible())
                                .Select(x => x as UnidadeType)
                                .ToList();
        }
        @foreach (var item in unidades)
        {
            <div class="col-lg-4 unidade">
                <img class="img-circle" src="@item.MiniaturaLoja.Url" alt="Generic placeholder image" width="110" height="110">
                <h2 class="titulo">@item.NomeUnidade</h2>
                <p class="texto">@item.EnderecoUnidade</p>
                <p class="link"><a class="glyphicon glyphicon-plus-sign" href="@item.Url" role="button"></a></p>
            </div><!-- /.col-lg-4 -->
        }
    </div><!-- /.row -->
    <!-- START THE FEATURETTES -->
</div><!-- /.container -->


<div id="myCarouselProdutos" class="carousel slide" data-ride="carousel">
    @{
        var produtos = Model.Content.Site().FirstChild("produtosType").Children("produtoType")
                        .Where(x => x.IsVisible())
                        .Select(x => x as ProdutoType)
                        .Where(x => x.ExibirHome)
                        .ToList();
    }
    <!-- Indicators -->
    <ol class="carousel-indicators">
        @for (int indicatorIndex = 0; indicatorIndex < produtos.Count(); indicatorIndex++)
        {
            <li data-target="#myCarouselProdutos" data-slide-to="@indicatorIndex" class="@(indicatorIndex == activeIndicatorIndex ? "active" : string.Empty)"></li>
        }
    </ol>
    <div class="carousel-inner" role="listbox">
        @for (int indicatorIndex = 0; indicatorIndex < produtos.Count(); indicatorIndex++)
         {
            ProdutoType produto = produtos[indicatorIndex] as ProdutoType;
            <div class="item @(indicatorIndex == activeIndicatorIndex ? "active" : string.Empty)" style="background-attachment: fixed ;background-image: url(@produto.FotoHome.Url)"
                  data-stellar-vertical-offset="50" data-stellar-background-ratio="0" >
                <div class="container">
                    <div class="carousel-caption">
                        <h1>@produto.Nome</h1>
                        <p>@produto.Descricao</p>
                        <p><a class="btn btn-md mycms-carousel" href="@produto.Url" role="button">Ver mais</a></p>
                    </div>
                </div>
            </div>
        }
    </div>
    <a class="left carousel-control" href="#myCarouselProdutos" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarouselProdutos" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<div class="container novidades">
    @{
        var novidades = Model.Content.Site().FirstChild("novidadesType").Children("novidadeType")
                            .Where(x => x.IsVisible())
                            .Select(x => x as NovidadeType)
                            .ToList();
    }

    @for (int indiceNovidade = 0; indiceNovidade < novidades.Count(); indiceNovidade++)
    {
        NovidadeType novidade = novidades[indiceNovidade];

        <div class="row">
            <div class="col-md-7 @(indiceNovidade % 2 != 0 ? "col-md-push-5": string.Empty)">
                <h2 class="titulo"><a href="@novidade.Url">@novidade.Titulo</a></h2>
                <p>@novidade.Resumo</p>
            </div>
            <div class="col-md-5 @(indiceNovidade % 2 != 0 ? "col-md-pull-7": string.Empty)">
                <img class="img-responsive center-block" src="@novidade.ImagemHome.Url" data-holder-rendered="true">
            </div>
        </div>
    }
</div>

